#!/usr/bin/python

import os, argparse, subprocess
import re

# parse arguments
parser = argparse.ArgumentParser()
parser.add_argument("fasm", metavar="input.s", help="the MIPS assembly file (ASCII)")
args = parser.parse_args()

fasm = args.fasm
fhex = fasm + ".out"

# run SPIM (the actual MIPS assembler)
SPIM = os.path.dirname(os.path.abspath(__file__)) + "/spim"
cmd = [SPIM, "-noexception", "-assemble", "-file", fasm]
subprocess.call(cmd)

# Rename the SPIM output file to have a more descriptice name
cmd = ["mv", fhex, re.sub('\.s.out$', '.x', fhex)]
subprocess.call(cmd)

# parse the file
fhextmp = re.sub('\.s.out$', '.x', fhex)
lines = open(fhextmp, "r").readlines()
lines = map(lambda x:x.lstrip(), lines)
data = str.join('', lines[1:])
data = str.join('\n', data.split())
open(fhextmp, 'w').write(data)

# remove all other files
#cmd = ["rm", fhex + ".*.dat"]
#cmd = str.join(' ', cmd)
#subprocess.call(cmd, shell=True)  # we need a shell to expand the wildcard

